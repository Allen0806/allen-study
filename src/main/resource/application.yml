# app:
#   id: allen-spring-boot

#apollo:
#  bootstrap:
#    enabled: true
#    namespaces: application #,application.yml #,application-dev.yml
#    eagerLoad:
#      enabled: true

# 服务器端口号
server:
  port: 8080
  # tomcat配置
  tomcat:
    # tomcat字符集
    uri-encoding: UTF-8
    # tomcat最大连接数
    max-connections: 2000
    accept-count: 5000
    connection-timeout: 1000
    accesslog:
      # Buffer output such that it is only flushed periodically.
      buffered: true
      # Directory in which log files are created. Can be relative to the tomcat base dir or absolute.
      directory: /app/appuser/logs/allen-spring-boot
      # Enable access log.
      enabled: true
      # Date format to place in log file name.
      file-date-format: .yyyy-MM-dd
      # Format pattern for access logs.
      pattern: common
      # Log file name prefix.
      prefix: access_log
      # Defer inclusion of the date stamp in the file name until rotate time.
      rename-on-rotate: false
      # Set request attributes for IP address, Hostname, protocol and port used for the request.
      request-attributes-enabled: false
      # Enable access log rotation.
      rotate: true
      # Log file name suffix
      suffix: .log
    # tomcat最大线程数    threads:      max: 1000  servlet:    encoding:      charset: UTF-8

spring:
  application:
    name: allen-spring-boot
  main:
    banner-mode: "off"
  datasource:
    #使用druid连接池
    type: com.alibaba.druid.pool.DruidDataSource
    # 配置基本属性
    url: jdbc:mysql://192.168.74.129:3306/mydev?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&allowMultiQueries=true
    username: mydev
    password: Mydev@1234
    #druid相关配置
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      # 配置初始化大小/最小/最大
      initial-size: 5
      min-idle: 5
      max-active: 30
      # 获取连接等待超时时间
      max-wait: 60000
      # 间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      # 一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      # 监控统计拦截的filters
      filters: stat
      filter: 
        wall:
          enabled: true
          db-type: mysql
          config.multi-statement-allow: true
        slf4j:
          enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
        session-stat-enable: true
        
#rocketmq:
  # 可不给定，默认固定为：allen-message-topic
  # topic: allen-topic
  # 可不给定，默认固定为：allen-message-tag
  # tags: allen-tag
#  name-server: 192.168.74.129:9876
#  producer:
    # 可不给定，默认固定为：
#    group: allen-producer
    # 可不指定，默认大小为4M
 #   max-message-size: 1048576
    
      
#配置Mybatis
mybatis:
  mapper-locations: classpath*:mapper/**/*.xml
  configuration:
        # 开启驼峰命名转换，如：Table(create_time) -> Entity(createTime)。不需要我们关心怎么进行字段匹配，mybatis会自动识别`大写字母与下划线`
    map-underscore-to-camel-case: true
xxl:
  job:
    admin:
      addresses: http://192.168.74.129:9080/xxl-job-admin
    executor:
      appname: allen-spring-boot
      ip:
      port: 0
      logpath: /app/appuser/logs/allen-spring-boot/xxl-job
      logretentiondays: -1
    accessToken:
# tool:
#  redis:
#    timeToLive: 15
#    lettuce:
#      pool:
#        MaxTotal: 50
#        minIdle: 1
#        maxWaitMillis: 5000
#        maxIdle: 5
#    redis-a:
#      database: 7
#      hostName: 192.168.74.129
#      port: 6379
#      timeout: 5000
#    redis-b:
#      database: 3
#      hostName: ${spring.redis.redis-a.hostName}
#      port: ${spring.redis.redis-a.port}
#      timeout: ${spring.redis.redis-a.timeout